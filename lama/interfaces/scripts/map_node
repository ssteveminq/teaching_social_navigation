#!/usr/bin/env python

import rospy

from lama_interfaces.local_map_agent import LocalMapAgent
from lama_interfaces.interface_factory import DBInterface
from lama_interfaces.cleartext_interface_factory import DBInterface as CTDBInterface
from lama_interfaces.srv import AddInterface
from lama_interfaces.srv import AddInterfaceResponse


def handle_add_interface(req):
    response = AddInterfaceResponse()
    if req.interface_type == req.SERIALIZED:
        Interface = DBInterface
    else:
        Interface = CTDBInterface

    try:
        iface = Interface(req.interface_name,
                          req.get_service_message,
                          req.set_service_message)
    except ValueError, e:
        raise rospy.ServiceException('Cannot add interface {}: {}'.format(
            req.interface_name, e))
    response.get_service_name = iface.getter_service_name
    response.set_service_name = iface.setter_service_name

    # Start the services if not already started.
    getter_proxy = rospy.ServiceProxy(iface.getter_service_name,
                                      iface.getter_service_class)
    try:
        getter_proxy.wait_for_service(0.01)
    except rospy.ROSException:
        iface.start_services()
    return response


if __name__ == '__main__':
    rospy.init_node('lama_interfaces', log_level=rospy.INFO)

    # Add the core interface for LamaObject and DescriptorLink objects.
    LocalMapAgent(start=True)

    # Add the server for AddInterface.
    s = rospy.Service('interface_factory', AddInterface, handle_add_interface)

    rospy.spin()
